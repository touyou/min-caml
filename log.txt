parsed: ---
let rec (fib: a) ((n: a)) = 
if n <= 1 then n else (fib((n - 1)) + fib((n - 2)))
in print_int(fib(30))
normalized: ---
let rec (fib: (Float) -> Float) ((n: Float)) = 
let Ti3 : Float = 1 in if n <= Ti3 then n else let Ti6 : Float = let Ti5 : Float = let Ti4 : Float = 1 in (n - Ti4)
 in fib(Ti5)
 in let Ti9 : Float = let Ti8 : Float = let Ti7 : Float = 2 in (n - Ti7)
 in fib(Ti8)
 in (Ti6 + Ti9)



 in let Ti2 : Float = let Ti1 : Float = 30 in fib(Ti1)
 in print_int(Ti2)

